{"version":3,"file":"gallery.component.d.ts","sources":["gallery.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnChanges, OnDestroy, SimpleChanges, TemplateRef, EventEmitter } from '@angular/core';\nimport { Gallery } from '../services/gallery.service';\nimport { GalleryRef } from '../services/gallery-ref';\nimport { GalleryError, GalleryItem, GalleryState } from '../models/gallery.model';\nexport declare class GalleryComponent implements OnInit, OnChanges, OnDestroy {\n    private _gallery;\n    galleryRef: GalleryRef;\n    id: string;\n    items: GalleryItem[];\n    nav: boolean;\n    dots: boolean;\n    loop: boolean;\n    thumb: boolean;\n    zoomOut: number;\n    counter: boolean;\n    dotsSize: number;\n    autoPlay: boolean;\n    gestures: boolean;\n    thumbWidth: number;\n    thumbHeight: number;\n    disableThumb: boolean;\n    panSensitivity: number;\n    playerInterval: number;\n    itemTemplate: TemplateRef<any>;\n    thumbTemplate: TemplateRef<any>;\n    thumbMode: 'strict' | 'free';\n    imageSize: 'cover' | 'contain';\n    dotsPosition: 'top' | 'bottom';\n    counterPosition: 'top' | 'bottom';\n    slidingDirection: 'horizontal' | 'vertical';\n    loadingStrategy: 'preload' | 'lazy' | 'default';\n    thumbPosition: 'top' | 'left' | 'right' | 'bottom';\n    /** Destroy gallery ref on component destroy event */\n    destroyRef: boolean;\n    /** Skip initializing the config with components inputs (Lightbox mode) */\n    skipInitConfig: boolean;\n    itemClick: EventEmitter<number>;\n    thumbClick: EventEmitter<number>;\n    playingChange: EventEmitter<GalleryState>;\n    indexChange: EventEmitter<GalleryState>;\n    itemsChange: EventEmitter<GalleryState>;\n    error: EventEmitter<GalleryError>;\n    private _itemClick$;\n    private _thumbClick$;\n    private _itemChange$;\n    private _indexChange$;\n    private _playingChange$;\n    private _playerListener$;\n    constructor(_gallery: Gallery);\n    private getConfig;\n    onAction(i: string | number): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onItemClick(i: number): void;\n    onThumbClick(i: number): void;\n    onError(err: GalleryError): void;\n    load(items: GalleryItem[]): void;\n    add(item: GalleryItem, active?: boolean): void;\n    addImage(data: any, active?: boolean): void;\n    addVideo(data: any, active?: boolean): void;\n    addIframe(data: any, active?: boolean): void;\n    addYoutube(data: any, active?: boolean): void;\n    remove(i: number): void;\n    next(): void;\n    prev(): void;\n    set(i: number): void;\n    reset(): void;\n    play(interval?: number): void;\n    stop(): void;\n}\n"]}